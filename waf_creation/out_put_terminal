deepa [ ~/waf ]$ terraform init
Initializing the backend...
Initializing modules...
Initializing provider plugins...
- Reusing previous version of hashicorp/azurerm from the dependency lock file
- Reusing previous version of azure/modtm from the dependency lock file
- Reusing previous version of hashicorp/random from the dependency lock file
- Using previously-installed hashicorp/azurerm v4.42.0
- Using previously-installed azure/modtm v0.3.5
- Using previously-installed hashicorp/random v3.7.2

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
deepa [ ~/waf ]$ terraform plan
var.location
  Azure region for deployment

  Enter a value: East US

var.resource_group_name
  Name of the resource group

  Enter a value: rg-waf-demo

var.waf_policy_name
  Name of the Web Application Firewall policy

  Enter a value: waf-policy-demo

module.waf_policy.data.modtm_module_source.telemetry[0]: Reading...
module.waf_policy.data.modtm_module_source.telemetry[0]: Read complete after 0s
module.waf_policy.data.azurerm_client_config.telemetry[0]: Reading...
module.waf_policy.data.azurerm_client_config.telemetry[0]: Read complete after 0s [id=Y2xpZW50Q29uZmlncy9jbGllbnRJZD0wNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDY7b2JqZWN0SWQ9NjkwMGQ4OGEtMDBiYy00ZWE3LWJlY2QtNmQ2ODM5YmYxMTM0O3N1YnNjcmlwdGlvbklkPTY1YzM3MDY1LWQzMTYtNGVkMy1hNzIwLWNjMGMzODcyYWMzYTt0ZW5hbnRJZD04NzI5MzYwOC1jYzdiLTRjNjYtYWU2ZS1lMDE3ZmZiZDU2YmQ=]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "rg-waf-demo"
    }

  # module.waf_policy.azurerm_web_application_firewall_policy.this will be created
  + resource "azurerm_web_application_firewall_policy" "this" {
      + http_listener_ids   = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "waf-policy-demo"
      + path_based_rule_ids = (known after apply)
      + resource_group_name = "rg-waf-demo"
      + tags                = {
          + "environment" = "dev"
          + "owner"       = "deepa"
        }

      + managed_rules {
          + managed_rule_set {
              + type    = "OWASP"
              + version = "3.2"
            }
        }
    }

  # module.waf_policy.modtm_telemetry.telemetry[0] will be created
  + resource "modtm_telemetry" "telemetry" {
      + ephemeral_number = (known after apply)
      + id               = (known after apply)
      + nonce            = (known after apply)
      + tags             = {
          + "location"        = "eastus"
          + "module_source"   = "registry.terraform.io/Azure/avm-res-network-applicationgatewaywebapplicationfirewallpolicy/azurerm"
          + "module_version"  = "0.2.0"
          + "random_id"       = (known after apply)
          + "subscription_id" = "65c37065-d316-4ed3-a720-cc0c3872ac3a"
          + "tenant_id"       = "87293608-cc7b-4c66-ae6e-e017ffbd56bd"
        }
    }

  # module.waf_policy.random_uuid.telemetry[0] will be created
  + resource "random_uuid" "telemetry" {
      + id     = (known after apply)
      + result = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + waf_policy_id = (known after apply)

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.
deepa [ ~/waf ]$ terraform apply
var.location
  Azure region for deployment

  Enter a value: East US

var.resource_group_name
  Name of the resource group

  Enter a value: rg-waf-demo

var.waf_policy_name
  Name of the Web Application Firewall policy

  Enter a value: waf-policy-demo

module.waf_policy.data.modtm_module_source.telemetry[0]: Reading...
module.waf_policy.data.modtm_module_source.telemetry[0]: Read complete after 0s
module.waf_policy.data.azurerm_client_config.telemetry[0]: Reading...
module.waf_policy.data.azurerm_client_config.telemetry[0]: Read complete after 0s [id=Y2xpZW50Q29uZmlncy9jbGllbnRJZD0wNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDY7b2JqZWN0SWQ9NjkwMGQ4OGEtMDBiYy00ZWE3LWJlY2QtNmQ2ODM5YmYxMTM0O3N1YnNjcmlwdGlvbklkPTY1YzM3MDY1LWQzMTYtNGVkMy1hNzIwLWNjMGMzODcyYWMzYTt0ZW5hbnRJZD04NzI5MzYwOC1jYzdiLTRjNjYtYWU2ZS1lMDE3ZmZiZDU2YmQ=]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "rg-waf-demo"
    }

  # module.waf_policy.azurerm_web_application_firewall_policy.this will be created
  + resource "azurerm_web_application_firewall_policy" "this" {
      + http_listener_ids   = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "waf-policy-demo"
      + path_based_rule_ids = (known after apply)
      + resource_group_name = "rg-waf-demo"
      + tags                = {
          + "environment" = "dev"
          + "owner"       = "deepa"
        }

      + managed_rules {
          + managed_rule_set {
              + type    = "OWASP"
              + version = "3.2"
            }
        }
    }

  # module.waf_policy.modtm_telemetry.telemetry[0] will be created
  + resource "modtm_telemetry" "telemetry" {
      + ephemeral_number = (known after apply)
      + id               = (known after apply)
      + nonce            = (known after apply)
      + tags             = {
          + "location"        = "eastus"
          + "module_source"   = "registry.terraform.io/Azure/avm-res-network-applicationgatewaywebapplicationfirewallpolicy/azurerm"
          + "module_version"  = "0.2.0"
          + "random_id"       = (known after apply)
          + "subscription_id" = "65c37065-d316-4ed3-a720-cc0c3872ac3a"
          + "tenant_id"       = "87293608-cc7b-4c66-ae6e-e017ffbd56bd"
        }
    }

  # module.waf_policy.random_uuid.telemetry[0] will be created
  + resource "random_uuid" "telemetry" {
      + id     = (known after apply)
      + result = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + waf_policy_id = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.waf_policy.random_uuid.telemetry[0]: Creating...
module.waf_policy.random_uuid.telemetry[0]: Creation complete after 0s [id=3b5dce58-0cbc-d324-b991-db3a0ed7b088]
azurerm_resource_group.rg: Creating...
azurerm_resource_group.rg: Still creating... [00m10s elapsed]
azurerm_resource_group.rg: Creation complete after 15s [id=/subscriptions/65c37065-d316-4ed3-a720-cc0c3872ac3a/resourceGroups/rg-waf-demo]
module.waf_policy.modtm_telemetry.telemetry[0]: Creating...
module.waf_policy.azurerm_web_application_firewall_policy.this: Creating...
module.waf_policy.modtm_telemetry.telemetry[0]: Creation complete after 1s [id=1e717a54-cd83-4793-9252-52d37f5045df]
module.waf_policy.azurerm_web_application_firewall_policy.this: Creation complete after 5s [id=/subscriptions/65c37065-d316-4ed3-a720-cc0c3872ac3a/resourceGroups/rg-waf-demo/providers/Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies/waf-policy-demo]

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

waf_policy_id = "/subscriptions/65c37065-d316-4ed3-a720-cc0c3872ac3a/resourceGroups/rg-waf-demo/providers/Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies/waf-policy-demo"
deepa [ ~/waf ]$ 
